12/16/2013

added documentation files to Git repository
compiled tinyftp successfully
ran tinyftp with: tinyftp -s 127.0.0.1 -p 9909 -c .
this started a server on the localhost at port 9909

used PuTTY to get a new console, ran filezilla from: 
/compile/src/interface/filezilla
connected to 127.0.0.1 port 9909 from the quick connect bar
successfully connects to the server!
calls the "list" command to return the files in the current directory

noticed that the bottom of Filezilla has a tab for failed transfers with a
reason column - should add failed uploads/downloads from bad checksums to that

STARTING V1
based on work done in class, looked in tinyftp's connections.c for where the 
various FTP commands are implemented
found case statements around line 323 in interract function
noticed CMD_LIST and other constants defined
found enum for commands in cmdparser.h, added CMD_ZCHK

noticed that I need to return CMD_ZCHK from parse_input() located in cmdparser.h
added case statement based on pattern to return CMD_ZCHK when user input is ZCHK

went back to interract, added case for CMD_ZCHK based on pattern of others

looked at LIST command to see how it works - seems like you need to create client_fd
from make_client_connection(conn_fd, client_port, client_addr) to be able to write
responses to the client?
looked at the write_list function that it calls - it's defined in fileutils.c
has lots of checks to see if sock!=client_sock
conn_fd and client_port seem to be sockets

should probably create a function like write_checksum that takes in conn_fd, client_fd,
and then the file that it is trying to check
that function should handle the network stuff, and call another function which actually
returns the md5 checksum string of the inputted file - that can be a dummy for now
message that is sent to the client seems to usually be put in a char array

look at how delete_file is called in connections.c to see how you get a filename
filename just seems to be in the data_buff! - need to check that buffer for errors

added error checking of data_buff in interract's CMD_ZCHK case to make sure that it is not 
null, has a string of non-zero length, and does not start with a null character

note: when adding new functions, should add their prototypes to defines.h

use send_repl_client(client_sock, line) to send the message to the client

added retrieving the client socket and then calling the write_chksum function
to the CMD_ZCHK case in interract

added write_chksum function prototype to fileutils.h

created write_chksum function implementation in fileutils.c

used error checking on sockets from write_list

used connection closing from write_list

added print statement to write_chksum to test that everything up to this point has worked

command IS recognized, but throwing error 425
not printing the message that would indicate reaching write_chksum

things to check for tomorrow: where is error 425 sent?

12/18/2013

Can add debugging flag to CFLAG variable in tinyftp makefile to make it play
nice with gdb - running that is probably more informative than just putting
print statements everywhere! Could be interesting with a server though.

this didn't work too well, since halting a server does not lead to good things

searched code for instances of response 425, looked through my commits to see
where that is called in relation to my code

reply 425 - can't open data connection is sent whenever the client_sock parameter
does not match the sock parameter in the write_chksum function. I need to make
sure that this conditional statement is correct

on the plus side, the ZCHK command throws an error if no extra parameters (such as
a file name) are given to it, so that one check is working. Next up for that is
making sure that the file exists; however, that might be able to wait until the actual
checksum calculation is implemented

checking the conditional statement, it does appear to be fine - the write_chksum function
only reaches the line for sending the 425 response if the client socket is less than 0
(that is, not initialized properly) and the server socket does not equal the client socket.
So the issue lies with the function that is calling write_chksum (which is interract)

It seems to be following the same error checking pattern as commands like RETR or LIST,
but the input to the command might be wrong because of how I'm calling it (using the 
manual commands dialog box) - checking this with LIST (and a directory argument) yields
the same result, so I think we can call this revision completed, actually, and wait to
test it by calling it through the Filezilla GUI in the same way that LIST is called by
the program and not by using the "manual commands" box

Good place for the GUI toggle: under the "Force showing hidden files" toggle in the
Server menu?
